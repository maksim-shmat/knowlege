Pragmaticus — опытный в деле, пригодный для использования
Большинство людей находят перемены трудными – иногда по веским основаниям, а иногда просто по укоренившейся инерции. Поэтому в разделе "Суп из камней и варёные лягушки" рассматривается стратегия побуждающих к действию перемен и (ради равновесия) представлена поучительная история об одном земноводном, пренебрегшем опасностями, скрывающимися в постепенных переменах.
Одно из преимуществ, дающих понимание контекста, в котором вы работаете, заключается в том, что вам просто легче выяснить, насколько качественно разработанное вами программное обеспечение. Иногда близкое к идеальному качество оказывается лишь одним из возможных вариантов, но зачастую приходится идти на компромиссы. Более подробно этот вопрос рассматривается в разделе "Подходящее программное обеспечение".
Безусловно, чтобы всё это осилить, потребуется обширная база знаний, поэтому обучение – это непрерывно продолжающийся процесс. В связи с этим в разделе "Ваш багаж знаний" описываются некоторые стратегии поддержания динамики данного процесса.
Наконец, никто из нас не работает в вакууме. Все мы проводим немало времени, общаясь с другими людьми. Поэтому в разделе "Общайтесь!" перечислены способы, помогающие делать это лучше.
Прагматичное программирование происходит от философии прагматичного мышления. И в этой главе закладывается основание для такой философии.
Это ваша жизнь
"Я в этом мире не для того, чтобы жить то вашим ожиданиям, а вы – не для того, чтобы жить по моим".
								Брюс Ли
Это ваша жизнь, и она принадлежит вам. Вы её ведёте и творите.
Многие разработчики жалуются нам на свою разочарованность. Их проблемы различны. Одни ощущают застой в своей работе, а другие считают, что технический прогресс обошёл их стороной. Они полагают, что их недооценивают, им недоплачивают или в их командах отравляющая атмосфера. Возможно, они хотят переехать в Азию или в Европу, а может быть
работать дома. И в ответ на все эти жалобы мы всегда задаём один и тот же вопрос:"Почему вы не можете это изменить?"
Разработка программного обеспечения должна находится близко к началу любого доступного списка требующихся специальностей. Навыки разработчиков востребованы, их знания распространяются за пределы географических границ, они работают в удалённом режиме, получая за свой труд хорошую плату.
И вообще, они могут делать почти всё, что хотят.
Но по какой-то причине разработчики противятся переменам. Они выжидают, надеясь, что положение дел переменится к лучшему. Они пассивно наблюдают за тем, как их навыки устаревают, жалуясь на то, что их компании ничему их не обучают. Они рассматривают рекламные объявления экзотических стран в городском транспорте, а затем выходят под холодный дождь и бредут на работу. Поэтому ниже приведён самый важный совет в этой книге.
У вас есть свобода выбора. (Ахахахах, из ограниченного числа вариантов.)
Кот съел мой код
Одним из краеугольных камней прагматизма философии является идея взять на себя ответственность за свои действия в отношении продвижения по карьерной лестнице, обучения и образования, выполнения своего проекта и повседневной работы. Программисты-прагматики сами заботятся о своей карьере и не боятся признавать своё невежество или ошибки. Это, конечно, не самая приятная сторона программирования, но она всё же проявляется даже в самых удачных проектах. Порой дело не ладится, несмотря на проведённое тестирование, грамотно составленную документацию и сплошную авторматизацию.  И тогда выпуск программного продукта задерживается в связи с возникшими непредвиденными техническими трудностями. 
Если происходит нечто подобное, мы стараемся обращаться с командой как можно более профессионально. А это означает быть честными и откровенными. Мы можем гордиться своими способностями, но должны признавать и свои недостатки: невежество и ошибки.

